@using System;
@using System.Net;
@using misfits_festival.Shared.Models;
@using Dapper;
@using Npgsql;
@using misfits_festival.Client.Services;
@using misfits_festival.Client.Pages;
@using System.Net.Http;

@inject Blazored.LocalStorage.ILocalStorageService localStore

@page "/bruger"

<h3>Bruger side</h3>

Skriv din email herunder:
<br />
<input @bind="brugerEmail" />
<br />
<button @onclick="UpdateLocalStorage">Save</button>
<button @onclick="ClearLocalStorage">Clear</button>

    Din bruger email er: @brugerEmail

    <div class="parent">

        <div class="vagter">
            <!--<div class="ledigevagter">-->

            <h1>Ledige vagter</h1>

            <table>
                <tr>
                    <th>Dato</th>
                    <th>Vagt start</th>
                    <th>Vagt slut</th>
                    <th>Pause</th>
                    <th>Område</th>
                    <th>Opgave beskrivelse</th> <!--Dette skal evt laves til en join m. OpgaveBeskrivelse i stedet-->
                </tr>
                @foreach (var vagt in LedigeVagter)
                {
                    <tr>
                        <td>@vagt.Dato.ToShortDateString()</td>
                        <td>@vagt.VagtStart</td>
                        <td>@vagt.VagtSlut</td>
                        <td>@vagt.Pause</td>
                        <td>@vagt.Område</td>
                        <td>@vagt.OpgaveBeskrivelse</td>
                    </tr>
                }
            </table>
            <!--</div>-->

            <br />

            <!--<div class="brugervagter">-->

            @if (BrugerVagter is null)
            {
                <h3>Der er ingen vagter at vise</h3>
            }
            else
            {
                <h1>Dine vagter</h1>

                <table>

                    <tr>
                        <th>Vagt ID</th>
                        <th>Dato</th>
                        <th>Vagt start</th>
                        <th>Vagt slut</th>
                        <th>Pause</th>
                        <th>Område</th>
                        <th>Opgave beskrivelse</th>
                        <th>Bruger email</th>
                    </tr>
                    @foreach (var vagt in BrugerVagter)
                    {
                        <tr>
                            <td>@vagt.VagtId</td>
                            <td>@vagt.Dato.ToShortDateString()</td>
                            <td>@vagt.VagtStart</td>
                            <td>@vagt.VagtSlut</td>
                            <td>@vagt.Pause</td>
                            <td>@vagt.Område</td>
                            <td>@vagt.OpgaveBeskrivelse</td>
                            <td>@vagt.BrugerEmail</td>
                        </tr>
                    }

                </table>
            }


        </div>

        <br />
        <br />

        <div class="kompetencer">

            <table>

                <tr>
                    <th>Kompetencer</th>
                </tr>
                <tr>
                    <td>Førstehjælpskursus</td>
                </tr>
                <tr>
                    <td>Kørekort</td>
                </tr>
                <tr>
                    <td>Køkkencertifikat</td>
                </tr>

            </table>

        </div>

        <!--</div>-->

    </div>


    @code {
        const string noteKey = "note";
        string? brugerEmail = "";

        public async void UpdateLocalStorage()
        {
            await localStore.SetItemAsync(noteKey, brugerEmail);
        }

        public async void ClearLocalStorage()
        {
            brugerEmail = "";
            await localStore.ClearAsync();
        }

        private List<Vagt> LedigeVagter = new List<Vagt>(); // liste til ledige vagter
        private List<Vagt> BrugerVagter = new List<Vagt>(); // liste til brugerens vagter; koblet til brugerEmail

        private Vagt Vagt = new Vagt(); // ny vagt objekt; bruges til 

        // interfaces der tages i brug i dette component
        [Inject]
        public IBrugerService BrugerService { get; set; }
        [Inject]
        public IVagtService VagtService { get; set; }

        protected override async Task OnInitializedAsync()
        {
            brugerEmail = await localStore.GetItemAsync<string?>(noteKey);
            LedigeVagter = (await VagtService.GetLedigeVagter()).ToList();// populater LedigeVagter vha. metoden i VagtService
            // int mitBrugerId = int.Parse(brugerId);
            BrugerVagter = (await VagtService.GetMineVagter(brugerEmail)).ToList(); // populater MineVagter vha. metoden i VagtService
        }


    }
