@using System;
@using System.Net;
@using misfits_festival.Shared.Models;
@using Dapper;
@using Npgsql;
@using misfits_festival.Client.Services;
@using misfits_festival.Client.Pages;
@using System.Net.Http;

@inject Blazored.LocalStorage.ILocalStorageService localStore

@page "/koordinator"

<div class="brugerEmail">
    <!--
    Skriv herunder dit bruger id:
    <br />
    <input @bind="brugerId" />

    <br />

    <button @onclick="UpdateLocalStorage">Save</button>
    <button @onclick="ClearLocalStorage">Clear</button>
    -->

</div>

<br />


@if (brugerEmail != "koordinator")
{
    <h1>Din email er: @brugerEmail</h1>
    <h1>Du har ikke adgang til denne side</h1>
}
else
{
    <h3>Vagter</h3>

    <div>
        <table class="vagter">
            <tr>
                <th>Vagt ID</th>
                <th>Dato</th>
                <th>Vagt start</th>
                <th>Vagt slut</th>
                <th>Pause</th>
                <th>Område</th>
                <th>Opgave beskrivelse</th>
                <th>Bruger email</th>
            </tr>
            @foreach (var vagt in Vagter)
            {
                <tr>
                    <td>@vagt.VagtId</td>
                    <td>@vagt.Dato</td>
                    <td>@vagt.VagtStart</td>
                    <td>@vagt.VagtSlut</td>
                    <td>@vagt.Pause</td>
                    <td>@vagt.Område</td>
                    <td>@vagt.OpgaveBeskrivelse</td>
                    <td>@vagt.BrugerEmail</td>
                </tr>
            }
        </table>
        <br />

        <table class="frivillige">
            <tr>
                <th>Bruger ID</th>
                <th>Bruger Navn</th>
                <th>Bruger Email</th>
                <th>Telefonnummer</th>
                <th>Kompetencer</th>
            </tr>
            @foreach (var frivillig in Frivillige)
            {
                <tr>
                    <td>@frivillig.BrugerId</td>
                    <td>@frivillig.BrugerNavn</td>
                    <td>@frivillig.BrugerEmail</td>
                    <td>@frivillig.TelefonNummer</td>
                    <td>@frivillig.Kompetencer</td>
                </tr>
            }
        </table>
    </div>

    <div class="updatevagt">


        <EditForm EditContext="@EditContext" class="row p-3">

            <div class="col-md-6 mb-3">
                <label for="VagtId">Vagt ID</label>
                <InputNumber id="VagtId" @bind-Value="Vagt.VagtId" class="form-control" />
            </div>

            <br />

            <div class="col-md-6 mb-3">
                <label for="BrugerId">Bruger ID</label>
                <InputNumber id="BrugerId" @bind-Value="Vagt.BrugerId" class="form-control" />
            </div>

            <div class="col-12 mb-3">
                <button class="btn btn-primary" @onclick="UpdateVagtHandler">Update vagt</button>
            </div>

        </EditForm>


    </div>
}





@code {
    const string noteKey = "note";
    string brugerEmail = "";

    private EditContext EditContext;
    private int ErrorCode { get; set; }

    private Bruger NyBruger = new Bruger(); // definerer en ny bruger


    private List<Vagt> Vagter = new List<Vagt>();
    private Vagt Vagt = new Vagt();

    private List<Bruger> Frivillige = new List<Bruger>(); // definerer en ny liste af brugere

    // interfaces der tages i brug i dette component
    [Inject]
    public IVagtService VagtService { get; set; }
    [Inject]
    public IBrugerService BrugerService { get; set; }

    protected override void OnInitialized()
    {
        EditContext = new EditContext(Vagt);
    }

    private async Task UpdateVagtHandler()
    {
        ErrorCode = await VagtService.UpdateVagt(Vagt);
        Console.WriteLine("Vagt opdateret: " + ErrorCode);
        Vagt = new Vagt();
        EditContext = new EditContext(Vagt);
    }

    protected override async Task OnInitializedAsync()
    {
        brugerEmail = await localStore.GetItemAsync<string>(noteKey);
        Vagter = (await VagtService.GetAlleVagter()).ToList();
        Frivillige = (await BrugerService.GetAlleFrivillige()).ToList(); // populater vores liste af brugere v hjælp af,
                                                                         // getAlleFrivillige() metoden + toList
    }


}
