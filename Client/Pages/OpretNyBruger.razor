@using System;
@using System.Net;
@using misfits_festival.Shared.Models;
@using Dapper;
@using Npgsql;
@using misfits_festival.Client.Services;
@using misfits_festival.Client.Pages;
@using System.Net.Http;

@page "/nybruger"

<h3>Opret ny bruger</h3>

<div class="opretbruger">
    <EditForm EditContext="@EditContext" class="row p-3">
        <!--Form til opretning af en ny bruger-->

        <div class="col-md-12 mb-3">
            <label for="BrugerNavn">Bruger navn</label>
            <InputText id="BrugerNavn" @bind-Value="Bruger.BrugerNavn" class="form-control" />
        </div>

        <br />

        <div class="col-md-12 mb-3">
            <label for="BrugerEmail">Email</label>
            <InputText id="BrugerEmail" @bind-Value="Bruger.BrugerEmail" class="form-control" />
        </div>

        <br />

        <div class="col-md-6 mb-3">
            <label for="RolleId">Rolle</label>
            <InputSelect id="RolleId" @bind-Value="Bruger.RolleId">
                @foreach (var rolle in Roller)
                {
                    <option>@rolle</option>
                }
            </InputSelect>
        </div>

        <br />

        <div class="col-md-6 mb-3">
            <label for="Telefonnummer">Telefonnummer</label>
            <InputText id="Telefonnummer" @bind-Value="Bruger.TelefonNummer" class="form-control" />
        </div>

        <br />

        <div class="col-md-12 mb-3">
            <label for="ValgtKompetence">Valgt kompetence: @Bruger.Kompetencer</label>
        </div>

        <br />

        <div class="col-12 mb-3">
            <button class="btn btn-primary" @onclick="AddBrugerHandler">Tilføj ny bruger</button>
        </div>

    </EditForm>
</div>

<!--Denne kan muligvis godt slettes, så ens kompetencer bare er null, og så kan de opdateres på Bruger Siden-->
<div class="kompetencer">
    <table>
        <tr>
            <th>Kompetence ID</th>
            <th>Kompetence beskrivelse</th>
            <th></th>
        </tr>
        @foreach (var kompetence in Kompetencer)
        {
            <tr>
                <td>@kompetence.KompetenceBeskrivelse</td>
                <button class="btn btn-success" @onclick="() => VælgKompetence(kompetence)">Vælg denne kompetence</button>
            </tr>
        }
    </table>



</div>


@code {
    private EditContext EditContext;
    private Bruger Bruger = new Bruger();

    private List<Kompetence> Kompetencer = new List<Kompetence>();

    private int[] Roller = { 1 }; // når en bruger oprettes skal de kun kunne have rolleId 1

    private int ErrorCode { get; set; }

    // interfaces der tages i brug i dette component
    [Inject]
    public IBrugerService BrugerService { get; set; }


    protected override void OnInitialized()
    {
        EditContext = new EditContext(Bruger);
        Bruger.RolleId = Roller[0]; // gør at dropdown menuen til rolleId står på 1 ved initialisering
    }

    private async Task AddBrugerHandler() // implementerer AddBruger(bruger)
    {
        ErrorCode = await BrugerService.AddBruger(Bruger);
        Console.WriteLine("Bruger tilføjet: " + ErrorCode);
        Bruger = new Bruger();
        EditContext = new EditContext(Bruger);
        Bruger.RolleId = Roller[0];
    }

    protected override async Task OnInitializedAsync()
    {
        Kompetencer = (await BrugerService.GetAlleKompetencer()).ToList();
    }

    private async Task VælgKompetence(Kompetence kompetence)
    {
        Bruger.Kompetencer = kompetence.KompetenceBeskrivelse;
    }
}
